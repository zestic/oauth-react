{
    "sourceFile": "README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1754494977653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754494987624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,9 +134,9 @@\n ## Development\n \n ### Prerequisites\n \n-- Node.js 16+\n+- Node.js 20+\n - npm, yarn, or pnpm\n \n ### Setup\n \n"
                },
                {
                    "date": 1754498512824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,19 +65,29 @@\n \n ### 3. Create Callback Page\n \n ```typescript\n-import { OAuthCallbackPage } from '@zestic/oauth-react';\n+// React Router 6 example\n+import { useNavigate, useSearchParams } from 'react-router-dom';\n+import { OAuthCallbackPage, ReactRouterParameterExtractor } from '@zestic/oauth-react';\n \n function AuthCallback() {\n+  const navigate = useNavigate();\n+  const [searchParams] = useSearchParams();\n+\n   return (\n     <OAuthCallbackPage\n       config={oauthConfig}\n-      onSuccess={(tokens) => {\n-        console.log('Authentication successful:', tokens);\n+      parameterExtractor={new ReactRouterParameterExtractor(searchParams)}\n+      onSuccess={(result) => {\n+        console.log('Authentication successful:', result);\n+        // Your app handles navigation\n+        navigate('/dashboard');\n       }}\n       onError={(error) => {\n         console.error('Authentication failed:', error);\n+        // Your app handles error navigation\n+        navigate('/login?error=oauth_failed');\n       }}\n     />\n   );\n }\n"
                },
                {
                    "date": 1754498524543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,12 @@\n \n function LoginButton() {\n   const handleLogin = async () => {\n     const adapter = new ReactOAuthAdapter(oauthConfig);\n-    await adapter.startAuthFlow();\n+    const { url } = await adapter.generateAuthorizationUrl();\n+\n+    // Your app handles the redirect\n+    window.location.href = url;\n   };\n \n   return <button onClick={handleLogin}>Login with OAuth</button>;\n }\n"
                },
                {
                    "date": 1754498546174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,252 @@\n+# @zestic/oauth-react\n+\n+React web adapter for the `@zestic/oauth-core` library, enabling consistent OAuth flows across web and mobile platforms.\n+\n+## Overview\n+\n+This package provides React-specific implementations and components for OAuth authentication, built on top of `@zestic/oauth-core`. It includes web-optimized adapters for storage (localStorage), HTTP requests (fetch API), and PKCE (Web Crypto API).\n+\n+## Features\n+\n+- üîê **Secure OAuth 2.0 flows** with PKCE support\n+- ‚öõÔ∏è **React hooks and components** for easy integration\n+- üåê **Web-optimized adapters** using browser APIs\n+- üì± **Consistent API** with mobile implementations\n+- üéØ **TypeScript support** with full type safety\n+- üß™ **Framework agnostic** - works with React Router, Next.js, Vite, etc.\n+\n+## Installation\n+\n+```bash\n+npm install @zestic/oauth-react @zestic/oauth-core\n+# or\n+yarn add @zestic/oauth-react @zestic/oauth-core\n+# or\n+pnpm add @zestic/oauth-react @zestic/oauth-core\n+```\n+\n+## Requirements\n+\n+- Node.js 20 or higher\n+- React 18 or higher\n+\n+## Quick Start\n+\n+### 1. Configure OAuth\n+\n+```typescript\n+import { OAuthConfig } from '@zestic/oauth-core';\n+\n+const oauthConfig: OAuthConfig = {\n+  clientId: 'your-client-id',\n+  endpoints: {\n+    authorization: 'https://auth.example.com/oauth/authorize',\n+    token: 'https://auth.example.com/oauth/token',\n+    revocation: 'https://auth.example.com/oauth/revoke',\n+  },\n+  redirectUri: `${window.location.origin}/auth/callback`,\n+  scopes: ['read', 'write'],\n+};\n+```\n+\n+### 2. Set up OAuth Provider\n+\n+```typescript\n+import { OAuthProvider } from '@zestic/oauth-react';\n+\n+function App() {\n+  return (\n+    <OAuthProvider config={oauthConfig}>\n+      {/* Your app components */}\n+    </OAuthProvider>\n+  );\n+}\n+```\n+\n+### 3. Create Callback Page\n+\n+```typescript\n+// React Router 6 example\n+import { useNavigate, useSearchParams } from 'react-router-dom';\n+import { OAuthCallbackPage, ReactRouterParameterExtractor } from '@zestic/oauth-react';\n+\n+function AuthCallback() {\n+  const navigate = useNavigate();\n+  const [searchParams] = useSearchParams();\n+\n+  return (\n+    <OAuthCallbackPage\n+      config={oauthConfig}\n+      parameterExtractor={new ReactRouterParameterExtractor(searchParams)}\n+      onSuccess={(result) => {\n+        console.log('Authentication successful:', result);\n+        // Your app handles navigation\n+        navigate('/dashboard');\n+      }}\n+      onError={(error) => {\n+        console.error('Authentication failed:', error);\n+        // Your app handles error navigation\n+        navigate('/login?error=oauth_failed');\n+      }}\n+    />\n+  );\n+}\n+```\n+\n+### 4. Initiate OAuth Flow\n+\n+```typescript\n+import { ReactOAuthAdapter } from '@zestic/oauth-react';\n+\n+function LoginButton() {\n+  const handleLogin = async () => {\n+    const adapter = new ReactOAuthAdapter(oauthConfig);\n+    const { url } = await adapter.generateAuthorizationUrl();\n+\n+    // Your app handles the redirect\n+    window.location.href = url;\n+  };\n+\n+  return <button onClick={handleLogin}>Login with OAuth</button>;\n+}\n+```\n+\n+## Navigation-Agnostic Design\n+\n+This library follows the same pattern as `@zestic/oauth-expo` - it's **navigation-agnostic**. This means:\n+\n+‚úÖ **No hard-coded navigation** - Your app controls all routing\n+‚úÖ **Router flexibility** - Works with React Router, Next.js, or any routing solution\n+‚úÖ **Callback-based** - Uses `onSuccess`/`onError` callbacks instead of automatic redirects\n+‚úÖ **Parameter extraction** - Pluggable system for different router parameter handling\n+\n+### Router-Specific Examples\n+\n+#### React Router 6\n+```typescript\n+import { useNavigate, useSearchParams } from 'react-router-dom';\n+import { ReactRouterParameterExtractor } from '@zestic/oauth-react';\n+\n+// Use React Router's parameter extraction\n+const [searchParams] = useSearchParams();\n+const parameterExtractor = new ReactRouterParameterExtractor(searchParams);\n+```\n+\n+#### Next.js\n+```typescript\n+import { useRouter } from 'next/router';\n+import { CustomParameterExtractor } from '@zestic/oauth-react';\n+\n+// Use Next.js router\n+const router = useRouter();\n+const parameterExtractor = new CustomParameterExtractor(() =>\n+  new URLSearchParams(window.location.search)\n+);\n+```\n+\n+#### Vanilla/Browser\n+```typescript\n+import { BrowserParameterExtractor } from '@zestic/oauth-react';\n+\n+// Use browser's window.location.search\n+const parameterExtractor = new BrowserParameterExtractor();\n+```\n+\n+## API Reference\n+\n+### Components\n+\n+- **`OAuthProvider`** - Context provider for OAuth configuration\n+- **`OAuthCallbackPage`** - Handles OAuth callback flow\n+\n+### Hooks\n+\n+- **`useOAuthCallback`** - Manages OAuth callback state\n+- **`useOAuthConfig`** - OAuth configuration management\n+- **`useOAuthState`** - Authentication state management\n+\n+### Adapters\n+\n+- **`ReactOAuthAdapter`** - Main OAuth adapter for React\n+- **`WebStorageAdapter`** - localStorage implementation\n+- **`WebHttpAdapter`** - fetch API implementation\n+- **`WebPKCEAdapter`** - Web Crypto API PKCE implementation\n+\n+### Utilities\n+\n+- **`urlUtils`** - URL parameter handling utilities\n+- **`cryptoUtils`** - Cryptographic utility functions\n+\n+## Framework Examples\n+\n+Examples for different React frameworks are available in the `examples/` directory:\n+\n+- **React Router** - Standard React SPA setup\n+- **Next.js** - Server-side rendering support\n+- **Vite** - Modern build tool integration\n+\n+## Development\n+\n+### Prerequisites\n+\n+- Node.js 20+\n+- npm, yarn, or pnpm\n+\n+### Setup\n+\n+```bash\n+# Install dependencies\n+npm install\n+\n+# Run tests\n+npm test\n+\n+# Run tests in watch mode\n+npm run test:watch\n+\n+# Build the package\n+npm run build\n+\n+# Lint code\n+npm run lint\n+\n+# Format code\n+npm run format\n+```\n+\n+### Testing\n+\n+The package uses Vitest for testing with jsdom environment for browser API simulation.\n+\n+```bash\n+# Run all tests\n+npm test\n+\n+# Run tests with coverage\n+npm run test:coverage\n+\n+# Run tests in watch mode\n+npm run test:watch\n+```\n+\n+## Contributing\n+\n+1. Fork the repository\n+2. Create a feature branch\n+3. Make your changes\n+4. Add tests for new functionality\n+5. Ensure all tests pass\n+6. Submit a pull request\n+\n+## License\n+\n+MIT License - see [LICENSE](LICENSE) file for details.\n+\n+## Related Packages\n+\n+- [`@zestic/oauth-core`](https://github.com/zestic/oauth-core) - Core OAuth functionality\n+- [`@zestic/oauth-expo`](https://github.com/zestic/oauth-expo) - Expo/React Native adapter\n+\n+## Support\n+\n+For questions and support, please open an issue on [GitHub](https://github.com/zestic/oauth-react/issues).\n"
                }
            ],
            "date": 1754494977653,
            "name": "Commit-0",
            "content": "# @zestic/oauth-react\n\nReact web adapter for the `@zestic/oauth-core` library, enabling consistent OAuth flows across web and mobile platforms.\n\n## Overview\n\nThis package provides React-specific implementations and components for OAuth authentication, built on top of `@zestic/oauth-core`. It includes web-optimized adapters for storage (localStorage), HTTP requests (fetch API), and PKCE (Web Crypto API).\n\n## Features\n\n- üîê **Secure OAuth 2.0 flows** with PKCE support\n- ‚öõÔ∏è **React hooks and components** for easy integration\n- üåê **Web-optimized adapters** using browser APIs\n- üì± **Consistent API** with mobile implementations\n- üéØ **TypeScript support** with full type safety\n- üß™ **Framework agnostic** - works with React Router, Next.js, Vite, etc.\n\n## Installation\n\n```bash\nnpm install @zestic/oauth-react @zestic/oauth-core\n# or\nyarn add @zestic/oauth-react @zestic/oauth-core\n# or\npnpm add @zestic/oauth-react @zestic/oauth-core\n```\n\n## Requirements\n\n- Node.js 20 or higher\n- React 18 or higher\n\n## Quick Start\n\n### 1. Configure OAuth\n\n```typescript\nimport { OAuthConfig } from '@zestic/oauth-core';\n\nconst oauthConfig: OAuthConfig = {\n  clientId: 'your-client-id',\n  endpoints: {\n    authorization: 'https://auth.example.com/oauth/authorize',\n    token: 'https://auth.example.com/oauth/token',\n    revocation: 'https://auth.example.com/oauth/revoke',\n  },\n  redirectUri: `${window.location.origin}/auth/callback`,\n  scopes: ['read', 'write'],\n};\n```\n\n### 2. Set up OAuth Provider\n\n```typescript\nimport { OAuthProvider } from '@zestic/oauth-react';\n\nfunction App() {\n  return (\n    <OAuthProvider config={oauthConfig}>\n      {/* Your app components */}\n    </OAuthProvider>\n  );\n}\n```\n\n### 3. Create Callback Page\n\n```typescript\nimport { OAuthCallbackPage } from '@zestic/oauth-react';\n\nfunction AuthCallback() {\n  return (\n    <OAuthCallbackPage\n      config={oauthConfig}\n      onSuccess={(tokens) => {\n        console.log('Authentication successful:', tokens);\n      }}\n      onError={(error) => {\n        console.error('Authentication failed:', error);\n      }}\n    />\n  );\n}\n```\n\n### 4. Initiate OAuth Flow\n\n```typescript\nimport { ReactOAuthAdapter } from '@zestic/oauth-react';\n\nfunction LoginButton() {\n  const handleLogin = async () => {\n    const adapter = new ReactOAuthAdapter(oauthConfig);\n    await adapter.startAuthFlow();\n  };\n\n  return <button onClick={handleLogin}>Login with OAuth</button>;\n}\n```\n\n## API Reference\n\n### Components\n\n- **`OAuthProvider`** - Context provider for OAuth configuration\n- **`OAuthCallbackPage`** - Handles OAuth callback flow\n\n### Hooks\n\n- **`useOAuthCallback`** - Manages OAuth callback state\n- **`useOAuthConfig`** - OAuth configuration management\n- **`useOAuthState`** - Authentication state management\n\n### Adapters\n\n- **`ReactOAuthAdapter`** - Main OAuth adapter for React\n- **`WebStorageAdapter`** - localStorage implementation\n- **`WebHttpAdapter`** - fetch API implementation\n- **`WebPKCEAdapter`** - Web Crypto API PKCE implementation\n\n### Utilities\n\n- **`urlUtils`** - URL parameter handling utilities\n- **`cryptoUtils`** - Cryptographic utility functions\n\n## Framework Examples\n\nExamples for different React frameworks are available in the `examples/` directory:\n\n- **React Router** - Standard React SPA setup\n- **Next.js** - Server-side rendering support\n- **Vite** - Modern build tool integration\n\n## Development\n\n### Prerequisites\n\n- Node.js 16+\n- npm, yarn, or pnpm\n\n### Setup\n\n```bash\n# Install dependencies\nnpm install\n\n# Run tests\nnpm test\n\n# Run tests in watch mode\nnpm run test:watch\n\n# Build the package\nnpm run build\n\n# Lint code\nnpm run lint\n\n# Format code\nnpm run format\n```\n\n### Testing\n\nThe package uses Vitest for testing with jsdom environment for browser API simulation.\n\n```bash\n# Run all tests\nnpm test\n\n# Run tests with coverage\nnpm run test:coverage\n\n# Run tests in watch mode\nnpm run test:watch\n```\n\n## Contributing\n\n1. Fork the repository\n2. Create a feature branch\n3. Make your changes\n4. Add tests for new functionality\n5. Ensure all tests pass\n6. Submit a pull request\n\n## License\n\nMIT License - see [LICENSE](LICENSE) file for details.\n\n## Related Packages\n\n- [`@zestic/oauth-core`](https://github.com/zestic/oauth-core) - Core OAuth functionality\n- [`@zestic/oauth-expo`](https://github.com/zestic/oauth-expo) - Expo/React Native adapter\n\n## Support\n\nFor questions and support, please open an issue on [GitHub](https://github.com/zestic/oauth-react/issues).\n"
        }
    ]
}