{
    "sourceFile": "README.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1754494977653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754494987624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -134,9 +134,9 @@\n ## Development\n \n ### Prerequisites\n \n-- Node.js 16+\n+- Node.js 20+\n - npm, yarn, or pnpm\n \n ### Setup\n \n"
                }
            ],
            "date": 1754494977653,
            "name": "Commit-0",
            "content": "# @zestic/oauth-react\n\nReact web adapter for the `@zestic/oauth-core` library, enabling consistent OAuth flows across web and mobile platforms.\n\n## Overview\n\nThis package provides React-specific implementations and components for OAuth authentication, built on top of `@zestic/oauth-core`. It includes web-optimized adapters for storage (localStorage), HTTP requests (fetch API), and PKCE (Web Crypto API).\n\n## Features\n\n- üîê **Secure OAuth 2.0 flows** with PKCE support\n- ‚öõÔ∏è **React hooks and components** for easy integration\n- üåê **Web-optimized adapters** using browser APIs\n- üì± **Consistent API** with mobile implementations\n- üéØ **TypeScript support** with full type safety\n- üß™ **Framework agnostic** - works with React Router, Next.js, Vite, etc.\n\n## Installation\n\n```bash\nnpm install @zestic/oauth-react @zestic/oauth-core\n# or\nyarn add @zestic/oauth-react @zestic/oauth-core\n# or\npnpm add @zestic/oauth-react @zestic/oauth-core\n```\n\n## Requirements\n\n- Node.js 20 or higher\n- React 18 or higher\n\n## Quick Start\n\n### 1. Configure OAuth\n\n```typescript\nimport { OAuthConfig } from '@zestic/oauth-core';\n\nconst oauthConfig: OAuthConfig = {\n  clientId: 'your-client-id',\n  endpoints: {\n    authorization: 'https://auth.example.com/oauth/authorize',\n    token: 'https://auth.example.com/oauth/token',\n    revocation: 'https://auth.example.com/oauth/revoke',\n  },\n  redirectUri: `${window.location.origin}/auth/callback`,\n  scopes: ['read', 'write'],\n};\n```\n\n### 2. Set up OAuth Provider\n\n```typescript\nimport { OAuthProvider } from '@zestic/oauth-react';\n\nfunction App() {\n  return (\n    <OAuthProvider config={oauthConfig}>\n      {/* Your app components */}\n    </OAuthProvider>\n  );\n}\n```\n\n### 3. Create Callback Page\n\n```typescript\nimport { OAuthCallbackPage } from '@zestic/oauth-react';\n\nfunction AuthCallback() {\n  return (\n    <OAuthCallbackPage\n      config={oauthConfig}\n      onSuccess={(tokens) => {\n        console.log('Authentication successful:', tokens);\n      }}\n      onError={(error) => {\n        console.error('Authentication failed:', error);\n      }}\n    />\n  );\n}\n```\n\n### 4. Initiate OAuth Flow\n\n```typescript\nimport { ReactOAuthAdapter } from '@zestic/oauth-react';\n\nfunction LoginButton() {\n  const handleLogin = async () => {\n    const adapter = new ReactOAuthAdapter(oauthConfig);\n    await adapter.startAuthFlow();\n  };\n\n  return <button onClick={handleLogin}>Login with OAuth</button>;\n}\n```\n\n## API Reference\n\n### Components\n\n- **`OAuthProvider`** - Context provider for OAuth configuration\n- **`OAuthCallbackPage`** - Handles OAuth callback flow\n\n### Hooks\n\n- **`useOAuthCallback`** - Manages OAuth callback state\n- **`useOAuthConfig`** - OAuth configuration management\n- **`useOAuthState`** - Authentication state management\n\n### Adapters\n\n- **`ReactOAuthAdapter`** - Main OAuth adapter for React\n- **`WebStorageAdapter`** - localStorage implementation\n- **`WebHttpAdapter`** - fetch API implementation\n- **`WebPKCEAdapter`** - Web Crypto API PKCE implementation\n\n### Utilities\n\n- **`urlUtils`** - URL parameter handling utilities\n- **`cryptoUtils`** - Cryptographic utility functions\n\n## Framework Examples\n\nExamples for different React frameworks are available in the `examples/` directory:\n\n- **React Router** - Standard React SPA setup\n- **Next.js** - Server-side rendering support\n- **Vite** - Modern build tool integration\n\n## Development\n\n### Prerequisites\n\n- Node.js 16+\n- npm, yarn, or pnpm\n\n### Setup\n\n```bash\n# Install dependencies\nnpm install\n\n# Run tests\nnpm test\n\n# Run tests in watch mode\nnpm run test:watch\n\n# Build the package\nnpm run build\n\n# Lint code\nnpm run lint\n\n# Format code\nnpm run format\n```\n\n### Testing\n\nThe package uses Vitest for testing with jsdom environment for browser API simulation.\n\n```bash\n# Run all tests\nnpm test\n\n# Run tests with coverage\nnpm run test:coverage\n\n# Run tests in watch mode\nnpm run test:watch\n```\n\n## Contributing\n\n1. Fork the repository\n2. Create a feature branch\n3. Make your changes\n4. Add tests for new functionality\n5. Ensure all tests pass\n6. Submit a pull request\n\n## License\n\nMIT License - see [LICENSE](LICENSE) file for details.\n\n## Related Packages\n\n- [`@zestic/oauth-core`](https://github.com/zestic/oauth-core) - Core OAuth functionality\n- [`@zestic/oauth-expo`](https://github.com/zestic/oauth-expo) - Expo/React Native adapter\n\n## Support\n\nFor questions and support, please open an issue on [GitHub](https://github.com/zestic/oauth-react/issues).\n"
        }
    ]
}