{
    "sourceFile": "src/test/setup.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1754493775425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1754493775425,
            "name": "Commit-0",
            "content": "import { vi } from 'vitest';\n\n// Mock localStorage\nconst localStorageMock = {\n  getItem: vi.fn(),\n  setItem: vi.fn(),\n  removeItem: vi.fn(),\n  clear: vi.fn(),\n};\n\nObject.defineProperty(window, 'localStorage', {\n  value: localStorageMock,\n});\n\n// Mock crypto API\nconst cryptoMock = {\n  getRandomValues: vi.fn((arr: Uint8Array) => {\n    for (let i = 0; i < arr.length; i++) {\n      arr[i] = Math.floor(Math.random() * 256);\n    }\n    return arr;\n  }),\n  randomUUID: vi.fn(() => 'test-uuid-1234-5678-9012'),\n  subtle: {\n    digest: vi.fn().mockResolvedValue(new ArrayBuffer(32)),\n  },\n};\n\nObject.defineProperty(global, 'crypto', {\n  value: cryptoMock,\n});\n\n// Mock fetch\nglobal.fetch = vi.fn();\n\n// Mock window.location\nObject.defineProperty(window, 'location', {\n  value: {\n    href: 'http://localhost:3000',\n    origin: 'http://localhost:3000',\n    protocol: 'http:',\n    host: 'localhost:3000',\n    pathname: '/',\n    search: '',\n    hash: '',\n  },\n  writable: true,\n});\n\n// Reset all mocks before each test\nimport { beforeEach } from 'vitest';\n\nbeforeEach(() => {\n  vi.clearAllMocks();\n});\n"
        }
    ]
}