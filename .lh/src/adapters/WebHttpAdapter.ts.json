{
    "sourceFile": "src/adapters/WebHttpAdapter.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1754493656541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1754493656541,
            "name": "Commit-0",
            "content": "import { HttpAdapter, HttpRequest, HttpResponse } from '../types/oauth-core';\n\n/**\n * Web HTTP adapter using fetch API\n * Implements the HttpAdapter interface for browser environments\n */\nexport class WebHttpAdapter implements HttpAdapter {\n  async request(request: HttpRequest): Promise<HttpResponse> {\n    try {\n      const response = await fetch(request.url, {\n        method: request.method,\n        headers: request.headers,\n        body: request.body,\n      });\n\n      const data = await response.json().catch(() => ({}));\n\n      return {\n        status: response.status,\n        statusText: response.statusText,\n        headers: Object.fromEntries(response.headers.entries()),\n        data,\n        ok: response.ok,\n      };\n    } catch (error) {\n      throw new Error(`Network request failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n}\n"
        }
    ]
}